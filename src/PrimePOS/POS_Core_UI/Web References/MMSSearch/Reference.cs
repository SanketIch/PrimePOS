//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace POS_Core_UI.MMSSearch {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetConnectionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchPrescriberOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchDrugOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPriceDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchDrugPriceChangeLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchINSCAROperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriberDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrugDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrugPriceChangeLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrugPriceChangeLogByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetINSCARDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPCCDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriberDetailsSPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPresDetailByFNameSPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPresDetailByLNameSPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFTPCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMedGuideFileNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchPrescriberSPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPriceUpateHistroyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPriceUpdateHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticatePharmacyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrime_MessagesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrime_MessagesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrime_LatestMessagesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStatusPrime_PharmacyMessagesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnTimeIntervalOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCheckIfNPIExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGetPharmacyInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGetCustomerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGetAllProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnCustomerProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnGetQueryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::POS_Core_UI.Properties.Settings.Default.POS_Core_UI_MMSSearch_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetConnectionStatusCompletedEventHandler GetConnectionStatusCompleted;
        
        /// <remarks/>
        public event SearchPrescriberCompletedEventHandler SearchPrescriberCompleted;
        
        /// <remarks/>
        public event SearchDrugCompletedEventHandler SearchDrugCompleted;
        
        /// <remarks/>
        public event SearchItemCompletedEventHandler SearchItemCompleted;
        
        /// <remarks/>
        public event GetItemDataCompletedEventHandler GetItemDataCompleted;
        
        /// <remarks/>
        public event GetPriceDetailsCompletedEventHandler GetPriceDetailsCompleted;
        
        /// <remarks/>
        public event SearchDrugPriceChangeLogCompletedEventHandler SearchDrugPriceChangeLogCompleted;
        
        /// <remarks/>
        public event SearchINSCARCompletedEventHandler SearchINSCARCompleted;
        
        /// <remarks/>
        public event SearchAddressCompletedEventHandler SearchAddressCompleted;
        
        /// <remarks/>
        public event GetPrescriberDataCompletedEventHandler GetPrescriberDataCompleted;
        
        /// <remarks/>
        public event GetDrugDataCompletedEventHandler GetDrugDataCompleted;
        
        /// <remarks/>
        public event GetDrugPriceChangeLogCompletedEventHandler GetDrugPriceChangeLogCompleted;
        
        /// <remarks/>
        public event GetDrugPriceChangeLogByDateCompletedEventHandler GetDrugPriceChangeLogByDateCompleted;
        
        /// <remarks/>
        public event GetINSCARDataCompletedEventHandler GetINSCARDataCompleted;
        
        /// <remarks/>
        public event GetPCCDataCompletedEventHandler GetPCCDataCompleted;
        
        /// <remarks/>
        public event GetAddressCompletedEventHandler GetAddressCompleted;
        
        /// <remarks/>
        public event GetPrescDetailsCompletedEventHandler GetPrescDetailsCompleted;
        
        /// <remarks/>
        public event GetPrescriberDetailsSPICompletedEventHandler GetPrescriberDetailsSPICompleted;
        
        /// <remarks/>
        public event GetPresDetailByFNameSPICompletedEventHandler GetPresDetailByFNameSPICompleted;
        
        /// <remarks/>
        public event GetPresDetailByLNameSPICompletedEventHandler GetPresDetailByLNameSPICompleted;
        
        /// <remarks/>
        public event GetFTPCredentialsCompletedEventHandler GetFTPCredentialsCompleted;
        
        /// <remarks/>
        public event GetMedGuideFileNameCompletedEventHandler GetMedGuideFileNameCompleted;
        
        /// <remarks/>
        public event SearchPrescriberSPICompletedEventHandler SearchPrescriberSPICompleted;
        
        /// <remarks/>
        public event AddPriceUpateHistroyCompletedEventHandler AddPriceUpateHistroyCompleted;
        
        /// <remarks/>
        public event GetPriceUpdateHistoryCompletedEventHandler GetPriceUpdateHistoryCompleted;
        
        /// <remarks/>
        public event AuthenticatePharmacyCompletedEventHandler AuthenticatePharmacyCompleted;
        
        /// <remarks/>
        public event GetPrime_MessagesCountCompletedEventHandler GetPrime_MessagesCountCompleted;
        
        /// <remarks/>
        public event GetPrime_MessagesInfoCompletedEventHandler GetPrime_MessagesInfoCompleted;
        
        /// <remarks/>
        public event GetPrime_LatestMessagesInfoCompletedEventHandler GetPrime_LatestMessagesInfoCompleted;
        
        /// <remarks/>
        public event UpdateStatusPrime_PharmacyMessagesInfoCompletedEventHandler UpdateStatusPrime_PharmacyMessagesInfoCompleted;
        
        /// <remarks/>
        public event fnTimeIntervalCompletedEventHandler fnTimeIntervalCompleted;
        
        /// <remarks/>
        public event fnCheckIfNPIExistsCompletedEventHandler fnCheckIfNPIExistsCompleted;
        
        /// <remarks/>
        public event fnGetPharmacyInfoCompletedEventHandler fnGetPharmacyInfoCompleted;
        
        /// <remarks/>
        public event fnGetCustomerIDCompletedEventHandler fnGetCustomerIDCompleted;
        
        /// <remarks/>
        public event fnGetAllProductsCompletedEventHandler fnGetAllProductsCompleted;
        
        /// <remarks/>
        public event fnCustomerProductsCompletedEventHandler fnCustomerProductsCompleted;
        
        /// <remarks/>
        public event fnGetQueryCompletedEventHandler fnGetQueryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConnectionStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetConnectionStatus() {
            object[] results = this.Invoke("GetConnectionStatus", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetConnectionStatusAsync() {
            this.GetConnectionStatusAsync(null);
        }
        
        /// <remarks/>
        public void GetConnectionStatusAsync(object userState) {
            if ((this.GetConnectionStatusOperationCompleted == null)) {
                this.GetConnectionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectionStatusOperationCompleted);
            }
            this.InvokeAsync("GetConnectionStatus", new object[0], this.GetConnectionStatusOperationCompleted, userState);
        }
        
        private void OnGetConnectionStatusOperationCompleted(object arg) {
            if ((this.GetConnectionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectionStatusCompleted(this, new GetConnectionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchPrescriber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchPrescriber(string[] SearchCrieteria, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("SearchPrescriber", new object[] {
                        SearchCrieteria,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchPrescriberAsync(string[] SearchCrieteria, string NPI) {
            this.SearchPrescriberAsync(SearchCrieteria, NPI, null);
        }
        
        /// <remarks/>
        public void SearchPrescriberAsync(string[] SearchCrieteria, string NPI, object userState) {
            if ((this.SearchPrescriberOperationCompleted == null)) {
                this.SearchPrescriberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchPrescriberOperationCompleted);
            }
            this.InvokeAsync("SearchPrescriber", new object[] {
                        SearchCrieteria,
                        NPI}, this.SearchPrescriberOperationCompleted, userState);
        }
        
        private void OnSearchPrescriberOperationCompleted(object arg) {
            if ((this.SearchPrescriberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchPrescriberCompleted(this, new SearchPrescriberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchDrug", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchDrug(string[] SearchCrieteria, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("SearchDrug", new object[] {
                        SearchCrieteria,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchDrugAsync(string[] SearchCrieteria, string NPI) {
            this.SearchDrugAsync(SearchCrieteria, NPI, null);
        }
        
        /// <remarks/>
        public void SearchDrugAsync(string[] SearchCrieteria, string NPI, object userState) {
            if ((this.SearchDrugOperationCompleted == null)) {
                this.SearchDrugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchDrugOperationCompleted);
            }
            this.InvokeAsync("SearchDrug", new object[] {
                        SearchCrieteria,
                        NPI}, this.SearchDrugOperationCompleted, userState);
        }
        
        private void OnSearchDrugOperationCompleted(object arg) {
            if ((this.SearchDrugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchDrugCompleted(this, new SearchDrugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchItem(string[] SearchCrieteria, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("SearchItem", new object[] {
                        SearchCrieteria,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchItemAsync(string[] SearchCrieteria, string NPI) {
            this.SearchItemAsync(SearchCrieteria, NPI, null);
        }
        
        /// <remarks/>
        public void SearchItemAsync(string[] SearchCrieteria, string NPI, object userState) {
            if ((this.SearchItemOperationCompleted == null)) {
                this.SearchItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchItemOperationCompleted);
            }
            this.InvokeAsync("SearchItem", new object[] {
                        SearchCrieteria,
                        NPI}, this.SearchItemOperationCompleted, userState);
        }
        
        private void OnSearchItemOperationCompleted(object arg) {
            if ((this.SearchItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchItemCompleted(this, new SearchItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetItemData(string ItemID, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("GetItemData", new object[] {
                        ItemID,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemDataAsync(string ItemID, string NPI) {
            this.GetItemDataAsync(ItemID, NPI, null);
        }
        
        /// <remarks/>
        public void GetItemDataAsync(string ItemID, string NPI, object userState) {
            if ((this.GetItemDataOperationCompleted == null)) {
                this.GetItemDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemDataOperationCompleted);
            }
            this.InvokeAsync("GetItemData", new object[] {
                        ItemID,
                        NPI}, this.GetItemDataOperationCompleted, userState);
        }
        
        private void OnGetItemDataOperationCompleted(object arg) {
            if ((this.GetItemDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemDataCompleted(this, new GetItemDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPriceDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPriceDetails(string NDC, string PRICETYPEID, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("GetPriceDetails", new object[] {
                        NDC,
                        PRICETYPEID,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPriceDetailsAsync(string NDC, string PRICETYPEID, string NPI) {
            this.GetPriceDetailsAsync(NDC, PRICETYPEID, NPI, null);
        }
        
        /// <remarks/>
        public void GetPriceDetailsAsync(string NDC, string PRICETYPEID, string NPI, object userState) {
            if ((this.GetPriceDetailsOperationCompleted == null)) {
                this.GetPriceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPriceDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPriceDetails", new object[] {
                        NDC,
                        PRICETYPEID,
                        NPI}, this.GetPriceDetailsOperationCompleted, userState);
        }
        
        private void OnGetPriceDetailsOperationCompleted(object arg) {
            if ((this.GetPriceDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPriceDetailsCompleted(this, new GetPriceDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchDrugPriceChangeLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchDrugPriceChangeLog(string[] SearchCrieteria, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("SearchDrugPriceChangeLog", new object[] {
                        SearchCrieteria,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchDrugPriceChangeLogAsync(string[] SearchCrieteria, string NPI) {
            this.SearchDrugPriceChangeLogAsync(SearchCrieteria, NPI, null);
        }
        
        /// <remarks/>
        public void SearchDrugPriceChangeLogAsync(string[] SearchCrieteria, string NPI, object userState) {
            if ((this.SearchDrugPriceChangeLogOperationCompleted == null)) {
                this.SearchDrugPriceChangeLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchDrugPriceChangeLogOperationCompleted);
            }
            this.InvokeAsync("SearchDrugPriceChangeLog", new object[] {
                        SearchCrieteria,
                        NPI}, this.SearchDrugPriceChangeLogOperationCompleted, userState);
        }
        
        private void OnSearchDrugPriceChangeLogOperationCompleted(object arg) {
            if ((this.SearchDrugPriceChangeLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchDrugPriceChangeLogCompleted(this, new SearchDrugPriceChangeLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchINSCAR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchINSCAR(string[] SearchCrieteria, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("SearchINSCAR", new object[] {
                        SearchCrieteria,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchINSCARAsync(string[] SearchCrieteria, string NPI) {
            this.SearchINSCARAsync(SearchCrieteria, NPI, null);
        }
        
        /// <remarks/>
        public void SearchINSCARAsync(string[] SearchCrieteria, string NPI, object userState) {
            if ((this.SearchINSCAROperationCompleted == null)) {
                this.SearchINSCAROperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchINSCAROperationCompleted);
            }
            this.InvokeAsync("SearchINSCAR", new object[] {
                        SearchCrieteria,
                        NPI}, this.SearchINSCAROperationCompleted, userState);
        }
        
        private void OnSearchINSCAROperationCompleted(object arg) {
            if ((this.SearchINSCARCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchINSCARCompleted(this, new SearchINSCARCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchAddress(string[] SearchCrieteria, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("SearchAddress", new object[] {
                        SearchCrieteria,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAddressAsync(string[] SearchCrieteria, string NPI) {
            this.SearchAddressAsync(SearchCrieteria, NPI, null);
        }
        
        /// <remarks/>
        public void SearchAddressAsync(string[] SearchCrieteria, string NPI, object userState) {
            if ((this.SearchAddressOperationCompleted == null)) {
                this.SearchAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchAddressOperationCompleted);
            }
            this.InvokeAsync("SearchAddress", new object[] {
                        SearchCrieteria,
                        NPI}, this.SearchAddressOperationCompleted, userState);
        }
        
        private void OnSearchAddressOperationCompleted(object arg) {
            if ((this.SearchAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchAddressCompleted(this, new SearchAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrescriberData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrescriberData(string PrescriberNo, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("GetPrescriberData", new object[] {
                        PrescriberNo,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriberDataAsync(string PrescriberNo, string NPI) {
            this.GetPrescriberDataAsync(PrescriberNo, NPI, null);
        }
        
        /// <remarks/>
        public void GetPrescriberDataAsync(string PrescriberNo, string NPI, object userState) {
            if ((this.GetPrescriberDataOperationCompleted == null)) {
                this.GetPrescriberDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriberDataOperationCompleted);
            }
            this.InvokeAsync("GetPrescriberData", new object[] {
                        PrescriberNo,
                        NPI}, this.GetPrescriberDataOperationCompleted, userState);
        }
        
        private void OnGetPrescriberDataOperationCompleted(object arg) {
            if ((this.GetPrescriberDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriberDataCompleted(this, new GetPrescriberDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDrugData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDrugData(string DRUGNDC, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("GetDrugData", new object[] {
                        DRUGNDC,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDrugDataAsync(string DRUGNDC, string NPI) {
            this.GetDrugDataAsync(DRUGNDC, NPI, null);
        }
        
        /// <remarks/>
        public void GetDrugDataAsync(string DRUGNDC, string NPI, object userState) {
            if ((this.GetDrugDataOperationCompleted == null)) {
                this.GetDrugDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrugDataOperationCompleted);
            }
            this.InvokeAsync("GetDrugData", new object[] {
                        DRUGNDC,
                        NPI}, this.GetDrugDataOperationCompleted, userState);
        }
        
        private void OnGetDrugDataOperationCompleted(object arg) {
            if ((this.GetDrugDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrugDataCompleted(this, new GetDrugDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDrugPriceChangeLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDrugPriceChangeLog(string DrugNDC, string Inscd, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("GetDrugPriceChangeLog", new object[] {
                        DrugNDC,
                        Inscd,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDrugPriceChangeLogAsync(string DrugNDC, string Inscd, string NPI) {
            this.GetDrugPriceChangeLogAsync(DrugNDC, Inscd, NPI, null);
        }
        
        /// <remarks/>
        public void GetDrugPriceChangeLogAsync(string DrugNDC, string Inscd, string NPI, object userState) {
            if ((this.GetDrugPriceChangeLogOperationCompleted == null)) {
                this.GetDrugPriceChangeLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrugPriceChangeLogOperationCompleted);
            }
            this.InvokeAsync("GetDrugPriceChangeLog", new object[] {
                        DrugNDC,
                        Inscd,
                        NPI}, this.GetDrugPriceChangeLogOperationCompleted, userState);
        }
        
        private void OnGetDrugPriceChangeLogOperationCompleted(object arg) {
            if ((this.GetDrugPriceChangeLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrugPriceChangeLogCompleted(this, new GetDrugPriceChangeLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDrugPriceChangeLogByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDrugPriceChangeLogByDate(string DrugNDC, string Inscd, System.DateTime ChangeDate, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("GetDrugPriceChangeLogByDate", new object[] {
                        DrugNDC,
                        Inscd,
                        ChangeDate,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDrugPriceChangeLogByDateAsync(string DrugNDC, string Inscd, System.DateTime ChangeDate, string NPI) {
            this.GetDrugPriceChangeLogByDateAsync(DrugNDC, Inscd, ChangeDate, NPI, null);
        }
        
        /// <remarks/>
        public void GetDrugPriceChangeLogByDateAsync(string DrugNDC, string Inscd, System.DateTime ChangeDate, string NPI, object userState) {
            if ((this.GetDrugPriceChangeLogByDateOperationCompleted == null)) {
                this.GetDrugPriceChangeLogByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrugPriceChangeLogByDateOperationCompleted);
            }
            this.InvokeAsync("GetDrugPriceChangeLogByDate", new object[] {
                        DrugNDC,
                        Inscd,
                        ChangeDate,
                        NPI}, this.GetDrugPriceChangeLogByDateOperationCompleted, userState);
        }
        
        private void OnGetDrugPriceChangeLogByDateOperationCompleted(object arg) {
            if ((this.GetDrugPriceChangeLogByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrugPriceChangeLogByDateCompleted(this, new GetDrugPriceChangeLogByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetINSCARData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetINSCARData(string BINNO, string MACCODE, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("GetINSCARData", new object[] {
                        BINNO,
                        MACCODE,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetINSCARDataAsync(string BINNO, string MACCODE, string NPI) {
            this.GetINSCARDataAsync(BINNO, MACCODE, NPI, null);
        }
        
        /// <remarks/>
        public void GetINSCARDataAsync(string BINNO, string MACCODE, string NPI, object userState) {
            if ((this.GetINSCARDataOperationCompleted == null)) {
                this.GetINSCARDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetINSCARDataOperationCompleted);
            }
            this.InvokeAsync("GetINSCARData", new object[] {
                        BINNO,
                        MACCODE,
                        NPI}, this.GetINSCARDataOperationCompleted, userState);
        }
        
        private void OnGetINSCARDataOperationCompleted(object arg) {
            if ((this.GetINSCARDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetINSCARDataCompleted(this, new GetINSCARDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPCCData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPCCData(string TXRCODE, string[] languages, string[] formats, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("GetPCCData", new object[] {
                        TXRCODE,
                        languages,
                        formats,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPCCDataAsync(string TXRCODE, string[] languages, string[] formats, string NPI) {
            this.GetPCCDataAsync(TXRCODE, languages, formats, NPI, null);
        }
        
        /// <remarks/>
        public void GetPCCDataAsync(string TXRCODE, string[] languages, string[] formats, string NPI, object userState) {
            if ((this.GetPCCDataOperationCompleted == null)) {
                this.GetPCCDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPCCDataOperationCompleted);
            }
            this.InvokeAsync("GetPCCData", new object[] {
                        TXRCODE,
                        languages,
                        formats,
                        NPI}, this.GetPCCDataOperationCompleted, userState);
        }
        
        private void OnGetPCCDataOperationCompleted(object arg) {
            if ((this.GetPCCDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPCCDataCompleted(this, new GetPCCDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAddress(string ADDR_CD, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("GetAddress", new object[] {
                        ADDR_CD,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAddressAsync(string ADDR_CD, string NPI) {
            this.GetAddressAsync(ADDR_CD, NPI, null);
        }
        
        /// <remarks/>
        public void GetAddressAsync(string ADDR_CD, string NPI, object userState) {
            if ((this.GetAddressOperationCompleted == null)) {
                this.GetAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAddressOperationCompleted);
            }
            this.InvokeAsync("GetAddress", new object[] {
                        ADDR_CD,
                        NPI}, this.GetAddressOperationCompleted, userState);
        }
        
        private void OnGetAddressOperationCompleted(object arg) {
            if ((this.GetAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAddressCompleted(this, new GetAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrescDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrescDetails(string ADDR_CD, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("GetPrescDetails", new object[] {
                        ADDR_CD,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescDetailsAsync(string ADDR_CD, string NPI) {
            this.GetPrescDetailsAsync(ADDR_CD, NPI, null);
        }
        
        /// <remarks/>
        public void GetPrescDetailsAsync(string ADDR_CD, string NPI, object userState) {
            if ((this.GetPrescDetailsOperationCompleted == null)) {
                this.GetPrescDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPrescDetails", new object[] {
                        ADDR_CD,
                        NPI}, this.GetPrescDetailsOperationCompleted, userState);
        }
        
        private void OnGetPrescDetailsOperationCompleted(object arg) {
            if ((this.GetPrescDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescDetailsCompleted(this, new GetPrescDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrescriberDetailsSPI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrescriberDetailsSPI(string SPI, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("GetPrescriberDetailsSPI", new object[] {
                        SPI,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriberDetailsSPIAsync(string SPI, string NPI) {
            this.GetPrescriberDetailsSPIAsync(SPI, NPI, null);
        }
        
        /// <remarks/>
        public void GetPrescriberDetailsSPIAsync(string SPI, string NPI, object userState) {
            if ((this.GetPrescriberDetailsSPIOperationCompleted == null)) {
                this.GetPrescriberDetailsSPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriberDetailsSPIOperationCompleted);
            }
            this.InvokeAsync("GetPrescriberDetailsSPI", new object[] {
                        SPI,
                        NPI}, this.GetPrescriberDetailsSPIOperationCompleted, userState);
        }
        
        private void OnGetPrescriberDetailsSPIOperationCompleted(object arg) {
            if ((this.GetPrescriberDetailsSPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriberDetailsSPICompleted(this, new GetPrescriberDetailsSPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPresDetailByFNameSPI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPresDetailByFNameSPI(string fName, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("GetPresDetailByFNameSPI", new object[] {
                        fName,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPresDetailByFNameSPIAsync(string fName, string NPI) {
            this.GetPresDetailByFNameSPIAsync(fName, NPI, null);
        }
        
        /// <remarks/>
        public void GetPresDetailByFNameSPIAsync(string fName, string NPI, object userState) {
            if ((this.GetPresDetailByFNameSPIOperationCompleted == null)) {
                this.GetPresDetailByFNameSPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPresDetailByFNameSPIOperationCompleted);
            }
            this.InvokeAsync("GetPresDetailByFNameSPI", new object[] {
                        fName,
                        NPI}, this.GetPresDetailByFNameSPIOperationCompleted, userState);
        }
        
        private void OnGetPresDetailByFNameSPIOperationCompleted(object arg) {
            if ((this.GetPresDetailByFNameSPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPresDetailByFNameSPICompleted(this, new GetPresDetailByFNameSPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPresDetailByLNameSPI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPresDetailByLNameSPI(string lName, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("GetPresDetailByLNameSPI", new object[] {
                        lName,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPresDetailByLNameSPIAsync(string lName, string NPI) {
            this.GetPresDetailByLNameSPIAsync(lName, NPI, null);
        }
        
        /// <remarks/>
        public void GetPresDetailByLNameSPIAsync(string lName, string NPI, object userState) {
            if ((this.GetPresDetailByLNameSPIOperationCompleted == null)) {
                this.GetPresDetailByLNameSPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPresDetailByLNameSPIOperationCompleted);
            }
            this.InvokeAsync("GetPresDetailByLNameSPI", new object[] {
                        lName,
                        NPI}, this.GetPresDetailByLNameSPIOperationCompleted, userState);
        }
        
        private void OnGetPresDetailByLNameSPIOperationCompleted(object arg) {
            if ((this.GetPresDetailByLNameSPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPresDetailByLNameSPICompleted(this, new GetPresDetailByLNameSPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFTPCredentials", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFTPCredentials(string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("GetFTPCredentials", new object[] {
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFTPCredentialsAsync(string NPI) {
            this.GetFTPCredentialsAsync(NPI, null);
        }
        
        /// <remarks/>
        public void GetFTPCredentialsAsync(string NPI, object userState) {
            if ((this.GetFTPCredentialsOperationCompleted == null)) {
                this.GetFTPCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFTPCredentialsOperationCompleted);
            }
            this.InvokeAsync("GetFTPCredentials", new object[] {
                        NPI}, this.GetFTPCredentialsOperationCompleted, userState);
        }
        
        private void OnGetFTPCredentialsOperationCompleted(object arg) {
            if ((this.GetFTPCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFTPCredentialsCompleted(this, new GetFTPCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMedGuideFileName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMedGuideFileName(string txr, string NPI, out string fileName) {
            object[] results = this.Invoke("GetMedGuideFileName", new object[] {
                        txr,
                        NPI});
            fileName = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMedGuideFileNameAsync(string txr, string NPI) {
            this.GetMedGuideFileNameAsync(txr, NPI, null);
        }
        
        /// <remarks/>
        public void GetMedGuideFileNameAsync(string txr, string NPI, object userState) {
            if ((this.GetMedGuideFileNameOperationCompleted == null)) {
                this.GetMedGuideFileNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMedGuideFileNameOperationCompleted);
            }
            this.InvokeAsync("GetMedGuideFileName", new object[] {
                        txr,
                        NPI}, this.GetMedGuideFileNameOperationCompleted, userState);
        }
        
        private void OnGetMedGuideFileNameOperationCompleted(object arg) {
            if ((this.GetMedGuideFileNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMedGuideFileNameCompleted(this, new GetMedGuideFileNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchPrescriberSPI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchPrescriberSPI(string[] SearchCrieteria, string NPI, out System.Data.DataSet dsSearchResult) {
            object[] results = this.Invoke("SearchPrescriberSPI", new object[] {
                        SearchCrieteria,
                        NPI});
            dsSearchResult = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchPrescriberSPIAsync(string[] SearchCrieteria, string NPI) {
            this.SearchPrescriberSPIAsync(SearchCrieteria, NPI, null);
        }
        
        /// <remarks/>
        public void SearchPrescriberSPIAsync(string[] SearchCrieteria, string NPI, object userState) {
            if ((this.SearchPrescriberSPIOperationCompleted == null)) {
                this.SearchPrescriberSPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchPrescriberSPIOperationCompleted);
            }
            this.InvokeAsync("SearchPrescriberSPI", new object[] {
                        SearchCrieteria,
                        NPI}, this.SearchPrescriberSPIOperationCompleted, userState);
        }
        
        private void OnSearchPrescriberSPIOperationCompleted(object arg) {
            if ((this.SearchPrescriberSPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchPrescriberSPICompleted(this, new SearchPrescriberSPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPriceUpateHistroy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddPriceUpateHistroy(string NPI, System.DateTime logDate, int insertedItemCount, int UpdatedItemCount, string vendorName, string fileName, string appName) {
            object[] results = this.Invoke("AddPriceUpateHistroy", new object[] {
                        NPI,
                        logDate,
                        insertedItemCount,
                        UpdatedItemCount,
                        vendorName,
                        fileName,
                        appName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPriceUpateHistroyAsync(string NPI, System.DateTime logDate, int insertedItemCount, int UpdatedItemCount, string vendorName, string fileName, string appName) {
            this.AddPriceUpateHistroyAsync(NPI, logDate, insertedItemCount, UpdatedItemCount, vendorName, fileName, appName, null);
        }
        
        /// <remarks/>
        public void AddPriceUpateHistroyAsync(string NPI, System.DateTime logDate, int insertedItemCount, int UpdatedItemCount, string vendorName, string fileName, string appName, object userState) {
            if ((this.AddPriceUpateHistroyOperationCompleted == null)) {
                this.AddPriceUpateHistroyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPriceUpateHistroyOperationCompleted);
            }
            this.InvokeAsync("AddPriceUpateHistroy", new object[] {
                        NPI,
                        logDate,
                        insertedItemCount,
                        UpdatedItemCount,
                        vendorName,
                        fileName,
                        appName}, this.AddPriceUpateHistroyOperationCompleted, userState);
        }
        
        private void OnAddPriceUpateHistroyOperationCompleted(object arg) {
            if ((this.AddPriceUpateHistroyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPriceUpateHistroyCompleted(this, new AddPriceUpateHistroyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPriceUpdateHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPriceUpdateHistory(string NPI, string updatedNPI, System.DateTime fromDate, System.DateTime toDate, out System.Data.DataSet priceUpdateHist) {
            object[] results = this.Invoke("GetPriceUpdateHistory", new object[] {
                        NPI,
                        updatedNPI,
                        fromDate,
                        toDate});
            priceUpdateHist = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPriceUpdateHistoryAsync(string NPI, string updatedNPI, System.DateTime fromDate, System.DateTime toDate) {
            this.GetPriceUpdateHistoryAsync(NPI, updatedNPI, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void GetPriceUpdateHistoryAsync(string NPI, string updatedNPI, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.GetPriceUpdateHistoryOperationCompleted == null)) {
                this.GetPriceUpdateHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPriceUpdateHistoryOperationCompleted);
            }
            this.InvokeAsync("GetPriceUpdateHistory", new object[] {
                        NPI,
                        updatedNPI,
                        fromDate,
                        toDate}, this.GetPriceUpdateHistoryOperationCompleted, userState);
        }
        
        private void OnGetPriceUpdateHistoryOperationCompleted(object arg) {
            if ((this.GetPriceUpdateHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPriceUpdateHistoryCompleted(this, new GetPriceUpdateHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthenticatePharmacy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AuthenticatePharmacy(string NPI) {
            object[] results = this.Invoke("AuthenticatePharmacy", new object[] {
                        NPI});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticatePharmacyAsync(string NPI) {
            this.AuthenticatePharmacyAsync(NPI, null);
        }
        
        /// <remarks/>
        public void AuthenticatePharmacyAsync(string NPI, object userState) {
            if ((this.AuthenticatePharmacyOperationCompleted == null)) {
                this.AuthenticatePharmacyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticatePharmacyOperationCompleted);
            }
            this.InvokeAsync("AuthenticatePharmacy", new object[] {
                        NPI}, this.AuthenticatePharmacyOperationCompleted, userState);
        }
        
        private void OnAuthenticatePharmacyOperationCompleted(object arg) {
            if ((this.AuthenticatePharmacyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticatePharmacyCompleted(this, new AuthenticatePharmacyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrime_MessagesCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPrime_MessagesCount(string NPI) {
            object[] results = this.Invoke("GetPrime_MessagesCount", new object[] {
                        NPI});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrime_MessagesCountAsync(string NPI) {
            this.GetPrime_MessagesCountAsync(NPI, null);
        }
        
        /// <remarks/>
        public void GetPrime_MessagesCountAsync(string NPI, object userState) {
            if ((this.GetPrime_MessagesCountOperationCompleted == null)) {
                this.GetPrime_MessagesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrime_MessagesCountOperationCompleted);
            }
            this.InvokeAsync("GetPrime_MessagesCount", new object[] {
                        NPI}, this.GetPrime_MessagesCountOperationCompleted, userState);
        }
        
        private void OnGetPrime_MessagesCountOperationCompleted(object arg) {
            if ((this.GetPrime_MessagesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrime_MessagesCountCompleted(this, new GetPrime_MessagesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrime_MessagesInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrime_MessagesInfo(string NPI, out System.Data.DataSet dsMessage) {
            object[] results = this.Invoke("GetPrime_MessagesInfo", new object[] {
                        NPI});
            dsMessage = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrime_MessagesInfoAsync(string NPI) {
            this.GetPrime_MessagesInfoAsync(NPI, null);
        }
        
        /// <remarks/>
        public void GetPrime_MessagesInfoAsync(string NPI, object userState) {
            if ((this.GetPrime_MessagesInfoOperationCompleted == null)) {
                this.GetPrime_MessagesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrime_MessagesInfoOperationCompleted);
            }
            this.InvokeAsync("GetPrime_MessagesInfo", new object[] {
                        NPI}, this.GetPrime_MessagesInfoOperationCompleted, userState);
        }
        
        private void OnGetPrime_MessagesInfoOperationCompleted(object arg) {
            if ((this.GetPrime_MessagesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrime_MessagesInfoCompleted(this, new GetPrime_MessagesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrime_LatestMessagesInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrime_LatestMessagesInfo(string NPI, out System.Data.DataSet dsMessage) {
            object[] results = this.Invoke("GetPrime_LatestMessagesInfo", new object[] {
                        NPI});
            dsMessage = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrime_LatestMessagesInfoAsync(string NPI) {
            this.GetPrime_LatestMessagesInfoAsync(NPI, null);
        }
        
        /// <remarks/>
        public void GetPrime_LatestMessagesInfoAsync(string NPI, object userState) {
            if ((this.GetPrime_LatestMessagesInfoOperationCompleted == null)) {
                this.GetPrime_LatestMessagesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrime_LatestMessagesInfoOperationCompleted);
            }
            this.InvokeAsync("GetPrime_LatestMessagesInfo", new object[] {
                        NPI}, this.GetPrime_LatestMessagesInfoOperationCompleted, userState);
        }
        
        private void OnGetPrime_LatestMessagesInfoOperationCompleted(object arg) {
            if ((this.GetPrime_LatestMessagesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrime_LatestMessagesInfoCompleted(this, new GetPrime_LatestMessagesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStatusPrime_PharmacyMessagesInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateStatusPrime_PharmacyMessagesInfo(string NPI, string MessageID) {
            object[] results = this.Invoke("UpdateStatusPrime_PharmacyMessagesInfo", new object[] {
                        NPI,
                        MessageID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStatusPrime_PharmacyMessagesInfoAsync(string NPI, string MessageID) {
            this.UpdateStatusPrime_PharmacyMessagesInfoAsync(NPI, MessageID, null);
        }
        
        /// <remarks/>
        public void UpdateStatusPrime_PharmacyMessagesInfoAsync(string NPI, string MessageID, object userState) {
            if ((this.UpdateStatusPrime_PharmacyMessagesInfoOperationCompleted == null)) {
                this.UpdateStatusPrime_PharmacyMessagesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStatusPrime_PharmacyMessagesInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateStatusPrime_PharmacyMessagesInfo", new object[] {
                        NPI,
                        MessageID}, this.UpdateStatusPrime_PharmacyMessagesInfoOperationCompleted, userState);
        }
        
        private void OnUpdateStatusPrime_PharmacyMessagesInfoOperationCompleted(object arg) {
            if ((this.UpdateStatusPrime_PharmacyMessagesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStatusPrime_PharmacyMessagesInfoCompleted(this, new UpdateStatusPrime_PharmacyMessagesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fnTimeInterval", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int fnTimeInterval() {
            object[] results = this.Invoke("fnTimeInterval", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void fnTimeIntervalAsync() {
            this.fnTimeIntervalAsync(null);
        }
        
        /// <remarks/>
        public void fnTimeIntervalAsync(object userState) {
            if ((this.fnTimeIntervalOperationCompleted == null)) {
                this.fnTimeIntervalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnTimeIntervalOperationCompleted);
            }
            this.InvokeAsync("fnTimeInterval", new object[0], this.fnTimeIntervalOperationCompleted, userState);
        }
        
        private void OnfnTimeIntervalOperationCompleted(object arg) {
            if ((this.fnTimeIntervalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnTimeIntervalCompleted(this, new fnTimeIntervalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fnCheckIfNPIExists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool fnCheckIfNPIExists(string NPI) {
            object[] results = this.Invoke("fnCheckIfNPIExists", new object[] {
                        NPI});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void fnCheckIfNPIExistsAsync(string NPI) {
            this.fnCheckIfNPIExistsAsync(NPI, null);
        }
        
        /// <remarks/>
        public void fnCheckIfNPIExistsAsync(string NPI, object userState) {
            if ((this.fnCheckIfNPIExistsOperationCompleted == null)) {
                this.fnCheckIfNPIExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCheckIfNPIExistsOperationCompleted);
            }
            this.InvokeAsync("fnCheckIfNPIExists", new object[] {
                        NPI}, this.fnCheckIfNPIExistsOperationCompleted, userState);
        }
        
        private void OnfnCheckIfNPIExistsOperationCompleted(object arg) {
            if ((this.fnCheckIfNPIExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCheckIfNPIExistsCompleted(this, new fnCheckIfNPIExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fnGetPharmacyInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet fnGetPharmacyInfo() {
            object[] results = this.Invoke("fnGetPharmacyInfo", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void fnGetPharmacyInfoAsync() {
            this.fnGetPharmacyInfoAsync(null);
        }
        
        /// <remarks/>
        public void fnGetPharmacyInfoAsync(object userState) {
            if ((this.fnGetPharmacyInfoOperationCompleted == null)) {
                this.fnGetPharmacyInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGetPharmacyInfoOperationCompleted);
            }
            this.InvokeAsync("fnGetPharmacyInfo", new object[0], this.fnGetPharmacyInfoOperationCompleted, userState);
        }
        
        private void OnfnGetPharmacyInfoOperationCompleted(object arg) {
            if ((this.fnGetPharmacyInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGetPharmacyInfoCompleted(this, new fnGetPharmacyInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fnGetCustomerID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string fnGetCustomerID(string NIP) {
            object[] results = this.Invoke("fnGetCustomerID", new object[] {
                        NIP});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnGetCustomerIDAsync(string NIP) {
            this.fnGetCustomerIDAsync(NIP, null);
        }
        
        /// <remarks/>
        public void fnGetCustomerIDAsync(string NIP, object userState) {
            if ((this.fnGetCustomerIDOperationCompleted == null)) {
                this.fnGetCustomerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGetCustomerIDOperationCompleted);
            }
            this.InvokeAsync("fnGetCustomerID", new object[] {
                        NIP}, this.fnGetCustomerIDOperationCompleted, userState);
        }
        
        private void OnfnGetCustomerIDOperationCompleted(object arg) {
            if ((this.fnGetCustomerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGetCustomerIDCompleted(this, new fnGetCustomerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fnGetAllProducts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet fnGetAllProducts() {
            object[] results = this.Invoke("fnGetAllProducts", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void fnGetAllProductsAsync() {
            this.fnGetAllProductsAsync(null);
        }
        
        /// <remarks/>
        public void fnGetAllProductsAsync(object userState) {
            if ((this.fnGetAllProductsOperationCompleted == null)) {
                this.fnGetAllProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGetAllProductsOperationCompleted);
            }
            this.InvokeAsync("fnGetAllProducts", new object[0], this.fnGetAllProductsOperationCompleted, userState);
        }
        
        private void OnfnGetAllProductsOperationCompleted(object arg) {
            if ((this.fnGetAllProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGetAllProductsCompleted(this, new fnGetAllProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fnCustomerProducts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet fnCustomerProducts() {
            object[] results = this.Invoke("fnCustomerProducts", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void fnCustomerProductsAsync() {
            this.fnCustomerProductsAsync(null);
        }
        
        /// <remarks/>
        public void fnCustomerProductsAsync(object userState) {
            if ((this.fnCustomerProductsOperationCompleted == null)) {
                this.fnCustomerProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnCustomerProductsOperationCompleted);
            }
            this.InvokeAsync("fnCustomerProducts", new object[0], this.fnCustomerProductsOperationCompleted, userState);
        }
        
        private void OnfnCustomerProductsOperationCompleted(object arg) {
            if ((this.fnCustomerProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnCustomerProductsCompleted(this, new fnCustomerProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fnGetQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet fnGetQuery() {
            object[] results = this.Invoke("fnGetQuery", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void fnGetQueryAsync() {
            this.fnGetQueryAsync(null);
        }
        
        /// <remarks/>
        public void fnGetQueryAsync(object userState) {
            if ((this.fnGetQueryOperationCompleted == null)) {
                this.fnGetQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnGetQueryOperationCompleted);
            }
            this.InvokeAsync("fnGetQuery", new object[0], this.fnGetQueryOperationCompleted, userState);
        }
        
        private void OnfnGetQueryOperationCompleted(object arg) {
            if ((this.fnGetQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnGetQueryCompleted(this, new fnGetQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetConnectionStatusCompletedEventHandler(object sender, GetConnectionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConnectionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SearchPrescriberCompletedEventHandler(object sender, SearchPrescriberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchPrescriberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchPrescriberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SearchDrugCompletedEventHandler(object sender, SearchDrugCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchDrugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchDrugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SearchItemCompletedEventHandler(object sender, SearchItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetItemDataCompletedEventHandler(object sender, GetItemDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPriceDetailsCompletedEventHandler(object sender, GetPriceDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPriceDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPriceDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SearchDrugPriceChangeLogCompletedEventHandler(object sender, SearchDrugPriceChangeLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchDrugPriceChangeLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchDrugPriceChangeLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SearchINSCARCompletedEventHandler(object sender, SearchINSCARCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchINSCARCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchINSCARCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SearchAddressCompletedEventHandler(object sender, SearchAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPrescriberDataCompletedEventHandler(object sender, GetPrescriberDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriberDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriberDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDrugDataCompletedEventHandler(object sender, GetDrugDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrugDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrugDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDrugPriceChangeLogCompletedEventHandler(object sender, GetDrugPriceChangeLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrugPriceChangeLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrugPriceChangeLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDrugPriceChangeLogByDateCompletedEventHandler(object sender, GetDrugPriceChangeLogByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrugPriceChangeLogByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrugPriceChangeLogByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetINSCARDataCompletedEventHandler(object sender, GetINSCARDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetINSCARDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetINSCARDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPCCDataCompletedEventHandler(object sender, GetPCCDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPCCDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPCCDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAddressCompletedEventHandler(object sender, GetAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPrescDetailsCompletedEventHandler(object sender, GetPrescDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPrescriberDetailsSPICompletedEventHandler(object sender, GetPrescriberDetailsSPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriberDetailsSPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriberDetailsSPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPresDetailByFNameSPICompletedEventHandler(object sender, GetPresDetailByFNameSPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPresDetailByFNameSPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPresDetailByFNameSPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPresDetailByLNameSPICompletedEventHandler(object sender, GetPresDetailByLNameSPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPresDetailByLNameSPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPresDetailByLNameSPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetFTPCredentialsCompletedEventHandler(object sender, GetFTPCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFTPCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFTPCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMedGuideFileNameCompletedEventHandler(object sender, GetMedGuideFileNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMedGuideFileNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMedGuideFileNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string fileName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SearchPrescriberSPICompletedEventHandler(object sender, SearchPrescriberSPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchPrescriberSPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchPrescriberSPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsSearchResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddPriceUpateHistroyCompletedEventHandler(object sender, AddPriceUpateHistroyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPriceUpateHistroyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPriceUpateHistroyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPriceUpdateHistoryCompletedEventHandler(object sender, GetPriceUpdateHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPriceUpdateHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPriceUpdateHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet priceUpdateHist {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AuthenticatePharmacyCompletedEventHandler(object sender, AuthenticatePharmacyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticatePharmacyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticatePharmacyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPrime_MessagesCountCompletedEventHandler(object sender, GetPrime_MessagesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrime_MessagesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrime_MessagesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPrime_MessagesInfoCompletedEventHandler(object sender, GetPrime_MessagesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrime_MessagesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrime_MessagesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPrime_LatestMessagesInfoCompletedEventHandler(object sender, GetPrime_LatestMessagesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrime_LatestMessagesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrime_LatestMessagesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dsMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateStatusPrime_PharmacyMessagesInfoCompletedEventHandler(object sender, UpdateStatusPrime_PharmacyMessagesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStatusPrime_PharmacyMessagesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStatusPrime_PharmacyMessagesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void fnTimeIntervalCompletedEventHandler(object sender, fnTimeIntervalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnTimeIntervalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnTimeIntervalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void fnCheckIfNPIExistsCompletedEventHandler(object sender, fnCheckIfNPIExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCheckIfNPIExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCheckIfNPIExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void fnGetPharmacyInfoCompletedEventHandler(object sender, fnGetPharmacyInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGetPharmacyInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGetPharmacyInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void fnGetCustomerIDCompletedEventHandler(object sender, fnGetCustomerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGetCustomerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGetCustomerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void fnGetAllProductsCompletedEventHandler(object sender, fnGetAllProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGetAllProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGetAllProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void fnCustomerProductsCompletedEventHandler(object sender, fnCustomerProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnCustomerProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnCustomerProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void fnGetQueryCompletedEventHandler(object sender, fnGetQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnGetQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnGetQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591